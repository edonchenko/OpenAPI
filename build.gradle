plugins {
	id 'org.springframework.boot' version '2.6.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.openapi.generator" version "5.1.0"}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}
ext {
	swagger_annotations_version = "1.6.5"
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "io.swagger:swagger-annotations:$swagger_annotations_version"

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}
//def petstoreApiYml = "/Users/dunice/Downloads/OpenAPIFeign/src/main/resources/test.yml"

/* server code configuration */
task buildPetStoreServerCode(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
	generatorName = "spring"
	inputSpec = "/Users/dunice/Downloads/OpenAPIFeign/src/main/resources/test.yml"
	outputDir = "/Users/dunice/Downloads/OpenAPIFeign/generated"

	groupId = "$project.group"
	id = "$project.name-java-client"
	version = "$project.version"
	apiPackage = "com.openapi.api"
	modelPackage = "com.openapi.api.model"
	enablePostProcessFile = true
	skipOverwrite = false
	configOptions = [
			configPackage       : "com.openapi.api.config",
			java8               : "true",
			dateLibrary         : "java8",
			serializationLibrary: "jackson",
			library             : "spring-boot",
			useBeanValidation   : "true",
			interfaceOnly       : "true",
			serializableModel   : "true",
			useTags             : "true"
	]
}

// code will be generated during compilation
compileJava.dependsOn(buildPetStoreServerCode)
// attach the generated folder as source for this project
sourceSets {
	main {
		java {
			srcDir "$buildDir/generated/src/main/java"
		}
	}
}
tasks.named('test') {
	useJUnitPlatform()
}
